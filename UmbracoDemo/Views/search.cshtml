@inherits Umbraco.Web.Mvc.UmbracoViewPage

@{
    Layout = "master.cshtml";
    var searchQuery = Request.QueryString["q"];

    var image = Model.Value<IPublishedContent>("mainImage");

}

<!-- Page Header -->
@Html.Partial("/Views/Partials/pageHeader.cshtml")
<div class="container">
    <div class="row">
        <div class="col-lg-8 col-md-10 mx-auto">
            <div class="form-group controls">
                <input type="text" class="form-control col-xs-6" placeholder="@Umbraco.GetDictionaryValue("Search.Placeholder")" name="q" id="q" value="" />
            </div>
        </div>
        <div class="col-lg-8 col-md-10 mx-auto">
            <div class="form-group">
                <button class="btn btn-primary search-button" id="search">
                    @Umbraco.GetDictionaryValue("Search.ButtonText") <i class="fa fa-search"></i>
                </button>
                <button class="btn btn-warning" id="clear">
                    @Umbraco.GetDictionaryValue("Search.ButtonTextClear") <i class="fa fa-eraser"></i>
                </button>
                <span id="loading" class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
            </div>
        </div>
        <p><strong>s</strong> @Html.Raw(Umbraco.GetDictionaryValue("Search.ResultsText"))</p>
        <div class="col-lg-8 col-md-10 mx-auto" id="content">
          
        </div>
        
        @*@if (!string.IsNullOrWhiteSpace(searchQuery))
            {
                var results = Umbraco.ContentQuery.Search(searchQuery, string.Empty);
                long resultCount = results != null && results.Any() ? results.Count() : 0;
                <p>@Html.Raw(string.Format(Umbraco.GetDictionaryValue("Search.ResultsText"), searchQuery, resultCount, resultCount == 1 ? null : "s"))</p>

                if (resultCount > 0)
                {
                    foreach (var result in results)
                    {
                        var title = result.Content.Value<string>("title");
                        var subtitle = result.Content.Value<string>("subtitle");
                        var authorName = result.Content.Value<string>("authorName");
                        var articleDate = result.Content.Value<DateTime>("articleDate");

                        <div class="post-preview">
                            <a href="@result.Content.Url">
                                <h2 class="post-title">
                                    @(!string.IsNullOrWhiteSpace(title) ? title : result.Content.Name)
                                </h2>
                                @if (!string.IsNullOrWhiteSpace(subtitle))
                                {
                                    <h3 class="post-subtitle">@subtitle</h3>
                                }
                            </a>
                            @if (!string.IsNullOrWhiteSpace(authorName) && articleDate != DateTime.MinValue)
                            {
                                <p class="post-meta">
                                    Posted by @authorName on @articleDate.ToString("MMMM dd, yyyy")
                                </p>
                            }
                        </div>
                    }

                }
            }*@
    </div>
</div>



<script>
    $(document).ready(function () {

        $("#loading").hide();
        var title,subtitle,authorName,articleDate,url;        

        $("#search").on("click", function () {
            var searchQuery = $("#q").val();
            $("#loading").show();
            if (searchQuery !== null) {
                $.ajax({
                    url: "/umbraco/api/search/searchall",
                    type: "GET",
                    data: { q: searchQuery },
                    async: false,
                    success: function (response) {
                        $("#content").empty();
                        var data = JSON.parse(response);
                        for (var i = 0; i < data.length; i++) {
                            title = data[i].Title;
                            subtitle = data[i].Subtitle;
                            authorName = data[i].AuthorName;
                            articleDate = data[i].ArticleDates;
                            url = data[i].Url;
                            var template = "<div class='col-lg-8 col-md-10 mx-autoo' id='result'>" +
                                "<div class='post-preview'><a href='" + url + "'><h2 class='post-title'>" + title + "</h2><h3 class='post-subtitle'> " + subtitle + "</h3></a>" +
                                "<p class='post-meta'>Posted by " + authorName + " on " + articleDate + "</p></div >";
                            console.log(template);
                            $("#content").append(template);
                        }
                    }
                })
            }
            setTimeout(function () { $("#loading").hide(); }, 100);
            
        });

        $("#clear").on("click", function () { $("#q").val(""); });
    })
</script>